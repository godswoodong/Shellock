class MainClass {
  void Main(CaseClass c) {
    SystemClass::ClearConsole(SystemClass::SHOWCONSOLE);
    Console.WriteLine("Start\n");

    DateClass start(), finish();
    start.Now();

    SearchClass search();
    SearchClass container();

    search.AddKeyword("\\x11\\x7F\\x77\\x00", KeywordClass::GREP);

    container.AddKeyword("\\x48\\x00\\x69\\x00\\x73\\x00\\x74\\x00\\x6F\\x00\\x72\\x00\\x79\\x00", KeywordClass::GREP);
    container.AddKeyword("\\x08\\x20\\x00\\x00\\x00", KeywordClass::GREP);
    container.AddKeyword("\\x03\\xA0\\x05\\x00", KeywordClass::GREP);

    for(ItemIteratorClass i(c); EntryClass e = i.GetNextEntry();){
      if(e.Name().Contains("WebCacheV") && e.Extension() == "dat"){
        Console.WriteLine(e.TruePath());
        EntryFileClass ef();
        if(ef.Open(e)){
            int c_id;

            if(container.Find(ef, -1, -1, SearchClass::STATUSUPDATE) > 0){
                foreach(SearchClass::HitClass hit in container.GetHits()){
                    //Console.WriteLine("\nkeyword Index : {0}", hit.KeywordIndex());
                    String container_name;
                    int p_id, value;
                    int index;
                    String url;
                    ef.Seek(hit.Offset());
                    //Console.WriteLine(ef.GetPos());
                    ef.ReadString(container_name);
                    //Console.WriteLine(ef.GetPos());
                    //Console.WriteLine(container_name);
                    ef.Skip(0x09), p_id = ef.ReadBinaryInt(1);
                    ef.Skip(0x06), value = ef.ReadBinaryInt(1);
                    //Console.Write(container_name + "\t"), Console.Write(p_id + "\t"), Console.WriteLine(value);
                    if(container_name == "History" && p_id = 77 && value == 58)
                      ef.Seek(hit.Offset() = 0x37), c_id = ef.ReadBinaryInt(1), Console.WriteLine("container ID : {0}", c_id);

                    if(hit.KeywordIndex() == 1){
                      ef.Seek(hit.Offset());
                      ef.Skip(0x05), index = ef.ReadBinaryInt(5);
                      ef.ReadString(url);
                      //if(url.SubString(0,7) == "Visited")
                      //Console.WriteLine(url);
                    }
                    if(hit.KeywordIndex() == 2){
                      ef.Seek(hit.Offset());
                      ef.Skip(0x04), index = ef.ReadBinaryInt(5);
                      ef.ReadString(url);
                      //if(url.SubString(0,7) == "Visited")
                      //Console.WriteLine(url);
                    }
                }
            }

            ef.Seek(0);
            if(search.Find(ef, -1, -1, SearchClass::STATUSUPDATE) > 0){
                foreach(SearchClass::HitClass hit in search.GetHits()){
                if(hit.KeywordIndex() == 0){
                    String url;
                    int entry_id, id, access_cnt;
                    Console.WriteLine("offset : {0}", hit.Offset());
                    ef.Seek(hit.Offset() + 4), entry_id = ef.ReadBinaryInt(8);
                    ef.Seek(hit.Offset() + 12), id = ef.ReadBinaryInt(8);
                    ef.Seek(hit.Offset() + 56), access_cnt = ef.ReadBinaryInt(4);
                    DateClass access_date(), modif_date();
                    ef.Seek(hit.Offset() + 92), ef.ReadWinDate(access_date);
                    ef.Seek(hit.Offset() + 84), ef.ReadWinDate(modif_date);

                    ef.Seek(hit.Offset() + 128), ef.ReadString(url);

                    String title;
                    ef.Skip(0x61), ef.ReadString(title);
                    //Console.WriteLine("id : {0}\tcontainer id : {1}",id, c_id);
                    //if(id == c_id){
                      Console.WriteLine("access date : {0}",access_date.GetString());
                      Console.WriteLine("url : {0}",url);
                    //}
                  }
                }
            }

            break;
        }
      }

    }

    finish.Now();
    SystemClass::Message(ICONINFORMATION, "Script", "Start : " + start.GetString() + "\nFinish : " + finish.GetString());
  }
}
